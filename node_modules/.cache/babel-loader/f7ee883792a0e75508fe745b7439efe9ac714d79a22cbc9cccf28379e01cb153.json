{"ast":null,"code":"var _jsxFileName = \"F:\\\\Proyectos\\\\frontendbtg\\\\src\\\\components\\\\FundSubscription\\\\FundSubscription.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { subscribeToFund, fetchFunds, fetchUserByDocument, sendNotification } from '../../services/api';\nimport './FundSubscription.styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FundSubscription = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    document: '',\n    fundId: '',\n    amount: 0,\n    notifyBy: 'email' // Notificación por defecto es por email\n  });\n  const [userId, setUserId] = useState(null);\n  const [funds, setFunds] = useState([]);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleFetchUser = async () => {\n    if (formData.document) {\n      try {\n        const user = await fetchUserByDocument(formData.document);\n        setUserId(user.id);\n      } catch (error) {\n        console.error('Error fetching user', error);\n        alert('User not found. Please check the document.');\n      }\n    }\n  };\n  const handleFetchFunds = async () => {\n    try {\n      const fundsList = await fetchFunds();\n      setFunds(fundsList);\n    } catch (error) {\n      console.error('Error fetching funds', error);\n      alert('Failed to fetch funds. Please try again later.');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validar que el userId no sea null\n    if (!userId) {\n      alert('Please fetch a valid user first.');\n      return;\n    }\n    const subscriptionData = {\n      userId,\n      // Ahora userId es de tipo string\n      fundId: formData.fundId,\n      transactionType: \"subscribe\",\n      amount: formData.amount,\n      active: true\n    };\n    try {\n      // Llama a la API para suscribirse al fondo\n      await subscribeToFund(subscriptionData);\n\n      // Enviar notificación según la selección\n      const notificationMessage = `You have successfully subscribed to fund ID: ${formData.fundId}`;\n      await sendNotification(notificationMessage, formData.notifyBy);\n      alert('Subscription successful! You will be notified via ' + formData.notifyBy);\n    } catch (error) {\n      console.error('Error subscribing to fund', error);\n      alert('Subscription failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"fund-subscription-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Subscribe to a Fund\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"document\",\n      placeholder: \"User Document\",\n      onChange: handleChange,\n      onBlur: handleFetchUser,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"fundId\",\n      onChange: handleChange,\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a Fund\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), funds.map(fund => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: fund.id,\n        children: fund.name\n      }, fund.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"amount\",\n      placeholder: \"Subscription Amount\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"notifyBy\",\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"sms\",\n        children: \"SMS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Subscribe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(FundSubscription, \"ODqtcA6Ym+rPPJh9wsK0EWQgSr4=\");\n_c = FundSubscription;\nexport default FundSubscription;\nvar _c;\n$RefreshReg$(_c, \"FundSubscription\");","map":{"version":3,"names":["React","useState","subscribeToFund","fetchFunds","fetchUserByDocument","sendNotification","jsxDEV","_jsxDEV","FundSubscription","_s","formData","setFormData","document","fundId","amount","notifyBy","userId","setUserId","funds","setFunds","handleChange","e","target","name","value","handleFetchUser","user","id","error","console","alert","handleFetchFunds","fundsList","handleSubmit","preventDefault","subscriptionData","transactionType","active","notificationMessage","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onBlur","required","map","fund","_c","$RefreshReg$"],"sources":["F:/Proyectos/frontendbtg/src/components/FundSubscription/FundSubscription.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { subscribeToFund, fetchFunds, fetchUserByDocument, sendNotification } from '../../services/api';\r\nimport './FundSubscription.styles.css';\r\n\r\nconst FundSubscription: React.FC = () => {\r\n  const [formData, setFormData] = useState({\r\n    document: '',\r\n    fundId: '',\r\n    amount: 0,\r\n    notifyBy: 'email' // Notificación por defecto es por email\r\n  });\r\n  const [userId, setUserId] = useState<string | null>(null);\r\n  const [funds, setFunds] = useState<{ id: string; name: string }[]>([]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleFetchUser = async () => {\r\n    if (formData.document) {\r\n      try {\r\n        const user = await fetchUserByDocument(formData.document);\r\n        setUserId(user.id);\r\n      } catch (error) {\r\n        console.error('Error fetching user', error);\r\n        alert('User not found. Please check the document.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleFetchFunds = async () => {\r\n    try {\r\n      const fundsList = await fetchFunds();\r\n      setFunds(fundsList);\r\n    } catch (error) {\r\n      console.error('Error fetching funds', error);\r\n      alert('Failed to fetch funds. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    \r\n    // Validar que el userId no sea null\r\n    if (!userId) {\r\n      alert('Please fetch a valid user first.');\r\n      return;\r\n    }\r\n\r\n    const subscriptionData = {\r\n      userId, // Ahora userId es de tipo string\r\n      fundId: formData.fundId,\r\n      transactionType: \"subscribe\",\r\n      amount: formData.amount,\r\n      active: true\r\n    };\r\n\r\n    try {\r\n      // Llama a la API para suscribirse al fondo\r\n      await subscribeToFund(subscriptionData);\r\n\r\n      // Enviar notificación según la selección\r\n      const notificationMessage = `You have successfully subscribed to fund ID: ${formData.fundId}`;\r\n      await sendNotification(notificationMessage, formData.notifyBy);\r\n\r\n      alert('Subscription successful! You will be notified via ' + formData.notifyBy);\r\n    } catch (error) {\r\n      console.error('Error subscribing to fund', error);\r\n      alert('Subscription failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"fund-subscription-form\">\r\n      <h2>Subscribe to a Fund</h2>\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"document\"\r\n        placeholder=\"User Document\"\r\n        onChange={handleChange}\r\n        onBlur={handleFetchUser}\r\n        required\r\n      />\r\n      \r\n      <select name=\"fundId\" onChange={handleChange} required>\r\n        <option value=\"\">Select a Fund</option>\r\n        {funds.map(fund => (\r\n          <option key={fund.id} value={fund.id}>{fund.name}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <input\r\n        type=\"number\"\r\n        name=\"amount\"\r\n        placeholder=\"Subscription Amount\"\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      <select name=\"notifyBy\" onChange={handleChange}>\r\n        <option value=\"email\">Email</option>\r\n        <option value=\"sms\">SMS</option>\r\n      </select>\r\n\r\n      <button type=\"submit\">Subscribe</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FundSubscription;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,EAAEC,UAAU,EAAEC,mBAAmB,EAAEC,gBAAgB,QAAQ,oBAAoB;AACvG,OAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,gBAA0B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IACvCW,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,CAAC;IACTC,QAAQ,EAAE,OAAO,CAAC;EACpB,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAgB,IAAI,CAAC;EACzD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAiC,EAAE,CAAC;EAEtE,MAAMmB,YAAY,GAAIC,CAA0D,IAAK;IACnFV,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACW,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAIf,QAAQ,CAACE,QAAQ,EAAE;MACrB,IAAI;QACF,MAAMc,IAAI,GAAG,MAAMtB,mBAAmB,CAACM,QAAQ,CAACE,QAAQ,CAAC;QACzDK,SAAS,CAACS,IAAI,CAACC,EAAE,CAAC;MACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3CE,KAAK,CAAC,4CAA4C,CAAC;MACrD;IACF;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,SAAS,GAAG,MAAM7B,UAAU,CAAC,CAAC;MACpCgB,QAAQ,CAACa,SAAS,CAAC;IACrB,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CE,KAAK,CAAC,gDAAgD,CAAC;IACzD;EACF,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOZ,CAAmC,IAAK;IAClEA,CAAC,CAACa,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAAClB,MAAM,EAAE;MACXc,KAAK,CAAC,kCAAkC,CAAC;MACzC;IACF;IAEA,MAAMK,gBAAgB,GAAG;MACvBnB,MAAM;MAAE;MACRH,MAAM,EAAEH,QAAQ,CAACG,MAAM;MACvBuB,eAAe,EAAE,WAAW;MAC5BtB,MAAM,EAAEJ,QAAQ,CAACI,MAAM;MACvBuB,MAAM,EAAE;IACV,CAAC;IAED,IAAI;MACF;MACA,MAAMnC,eAAe,CAACiC,gBAAgB,CAAC;;MAEvC;MACA,MAAMG,mBAAmB,GAAG,gDAAgD5B,QAAQ,CAACG,MAAM,EAAE;MAC7F,MAAMR,gBAAgB,CAACiC,mBAAmB,EAAE5B,QAAQ,CAACK,QAAQ,CAAC;MAE9De,KAAK,CAAC,oDAAoD,GAAGpB,QAAQ,CAACK,QAAQ,CAAC;IACjF,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDE,KAAK,CAAC,wCAAwC,CAAC;IACjD;EACF,CAAC;EAED,oBACEvB,OAAA;IAAMgC,QAAQ,EAAEN,YAAa;IAACO,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBAC9DlC,OAAA;MAAAkC,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE5BtC,OAAA;MACEuC,IAAI,EAAC,MAAM;MACXvB,IAAI,EAAC,UAAU;MACfwB,WAAW,EAAC,eAAe;MAC3BC,QAAQ,EAAE5B,YAAa;MACvB6B,MAAM,EAAExB,eAAgB;MACxByB,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAEFtC,OAAA;MAAQgB,IAAI,EAAC,QAAQ;MAACyB,QAAQ,EAAE5B,YAAa;MAAC8B,QAAQ;MAAAT,QAAA,gBACpDlC,OAAA;QAAQiB,KAAK,EAAC,EAAE;QAAAiB,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACtC3B,KAAK,CAACiC,GAAG,CAACC,IAAI,iBACb7C,OAAA;QAAsBiB,KAAK,EAAE4B,IAAI,CAACzB,EAAG;QAAAc,QAAA,EAAEW,IAAI,CAAC7B;MAAI,GAAnC6B,IAAI,CAACzB,EAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqC,CAC1D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAETtC,OAAA;MACEuC,IAAI,EAAC,QAAQ;MACbvB,IAAI,EAAC,QAAQ;MACbwB,WAAW,EAAC,qBAAqB;MACjCC,QAAQ,EAAE5B,YAAa;MACvB8B,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAEFtC,OAAA;MAAQgB,IAAI,EAAC,UAAU;MAACyB,QAAQ,EAAE5B,YAAa;MAAAqB,QAAA,gBAC7ClC,OAAA;QAAQiB,KAAK,EAAC,OAAO;QAAAiB,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpCtC,OAAA;QAAQiB,KAAK,EAAC,KAAK;QAAAiB,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAETtC,OAAA;MAAQuC,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEX,CAAC;AAACpC,EAAA,CAxGID,gBAA0B;AAAA6C,EAAA,GAA1B7C,gBAA0B;AA0GhC,eAAeA,gBAAgB;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}