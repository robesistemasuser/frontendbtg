{"ast":null,"code":"var _jsxFileName = \"F:\\\\Proyectos\\\\frontendbtg\\\\src\\\\components\\\\FundCancellation\\\\FundCancellation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getUserByDocument, getUserFunds, cancelFundSubscription, getFundsById } from '../../services/api'; // Asegúrate de tener el servicio fetchFundDetails\nimport './FundCancellation.styles.css';\n\n/**\r\n * Define la estructura del tipo de relación de fondos.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FundCancellation = () => {\n  _s();\n  const [userId, setUserId] = useState(''); // Para almacenar el userId después de la búsqueda\n  const [document, setDocument] = useState(''); // Para almacenar el número de documento ingresado\n  const [funds, setFunds] = useState([]); // Fondos asociados al usuario\n  const [errorMessage, setErrorMessage] = useState(''); // Mensaje de error si no se encuentra el usuario\n\n  // Función para buscar el usuario por el número de documento\n  const handleSearchUser = async () => {\n    try {\n      setFunds([]); // Limpiar fondos antes de nueva búsqueda\n      const users = await getUserByDocument(document); // users es un array\n      setUserId(users.id);\n      setErrorMessage(''); // Limpiar mensaje de error\n\n      // Obtener los fondos asociados al usuario\n      const userFunds = await getUserFunds(users.id);\n      console.log(userFunds, \"userFundsssssss\");\n      if (userFunds.length === 0) {\n        setErrorMessage('Usuario no existe o no tiene transacciones asociadas.');\n        setFunds([]); // Limpiar transacciones si no hay datos\n      } else {\n        // Transformar los datos a la estructura correcta\n        const transformedFunds = await Promise.all(userFunds.map(async fund => {\n          var _detailsArray$, _detailsArray$2, _detailsArray2$;\n          // Extraer el documento y el monto del campo details\n          const detailsArray = fund.details.split(', ');\n          const document = ((_detailsArray$ = detailsArray[0]) === null || _detailsArray$ === void 0 ? void 0 : _detailsArray$.split(': ')[1]) || 'N/A';\n          const fundId = ((_detailsArray$2 = detailsArray[1]) === null || _detailsArray$2 === void 0 ? void 0 : _detailsArray$2.split(': ')[1]) || 'N/A';\n          const fundDetails = await getFundsById(fundId); // Suponiendo que fetchFundDetails devuelve el nombre del fondo\n          const detailsArray2 = fundDetails === null || fundDetails === void 0 ? void 0 : fundDetails.details;\n          console.log(detailsArray2, \"Datoo del fondo\");\n          const name = ((_detailsArray2$ = detailsArray2[0]) === null || _detailsArray2$ === void 0 ? void 0 : _detailsArray2$.split(': ')[1]) || 'N/A';\n          return {\n            document,\n            fundId,\n            fundName: name // Asumimos que el servicio fetchFundDetails devuelve un objeto con el nombre del fondo\n          };\n        }));\n        setFunds(transformedFunds);\n        setErrorMessage(''); // Limpiar mensajes de error\n      }\n    } catch (error) {\n      console.error('Error buscando usuario', error);\n      setErrorMessage('Error al buscar el usuario.');\n    }\n  };\n\n  // Función para cancelar una suscripción a un fondo\n  const handleCancelSubscription = async fundId => {\n    try {\n      await cancelFundSubscription(userId, fundId);\n      alert('Cancelación exitosa!');\n\n      // Actualizar la lista de fondos tras la cancelación\n      const updatedFunds = funds.filter(fund => fund.fundId !== fundId);\n      setFunds(updatedFunds);\n    } catch (error) {\n      console.error('Error al cancelar la suscripción', error);\n      alert('Error al cancelar la suscripción. Por favor, intenta de nuevo.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fund-cancellation-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cancelar Suscripci\\xF3n a Fondos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-user-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: document,\n        onChange: e => setDocument(e.target.value),\n        placeholder: \"N\\xFAmero de documento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearchUser,\n        children: \"Buscar Usuario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 24\n    }, this), userId && funds.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"fund-list-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fondo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Acci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: funds.map(fund => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: fund.fundName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCancelSubscription(fund.fundId),\n              children: \"Cancelar Suscripci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)]\n        }, fund.fundId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), userId && funds.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay fondos asociados a este usuario.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 40\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(FundCancellation, \"vnA01e11Kf87RdwfFtGLnV32e60=\");\n_c = FundCancellation;\nexport default FundCancellation;\nvar _c;\n$RefreshReg$(_c, \"FundCancellation\");","map":{"version":3,"names":["React","useState","getUserByDocument","getUserFunds","cancelFundSubscription","getFundsById","jsxDEV","_jsxDEV","FundCancellation","_s","userId","setUserId","document","setDocument","funds","setFunds","errorMessage","setErrorMessage","handleSearchUser","users","id","userFunds","console","log","length","transformedFunds","Promise","all","map","fund","_detailsArray$","_detailsArray$2","_detailsArray2$","detailsArray","details","split","fundId","fundDetails","detailsArray2","name","fundName","error","handleCancelSubscription","alert","updatedFunds","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["F:/Proyectos/frontendbtg/src/components/FundCancellation/FundCancellation.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { getUserByDocument, getUserFunds, cancelFundSubscription, getFundsById } from '../../services/api'; // Asegúrate de tener el servicio fetchFundDetails\r\nimport './FundCancellation.styles.css';\r\n\r\n/**\r\n * Define la estructura del tipo de relación de fondos.\r\n */\r\ninterface Fund {\r\n  fundId: string;\r\n  document: string;\r\n  fundName: string; // Agregar el campo fundName para almacenar el nombre del fondo\r\n}\r\n\r\nconst FundCancellation: React.FC = () => {\r\n  const [userId, setUserId] = useState<string>(''); // Para almacenar el userId después de la búsqueda\r\n  const [document, setDocument] = useState<string>(''); // Para almacenar el número de documento ingresado\r\n  const [funds, setFunds] = useState<Fund[]>([]); // Fondos asociados al usuario\r\n  const [errorMessage, setErrorMessage] = useState<string>(''); // Mensaje de error si no se encuentra el usuario\r\n\r\n  // Función para buscar el usuario por el número de documento\r\n  const handleSearchUser = async () => {\r\n    try {\r\n      setFunds([]); // Limpiar fondos antes de nueva búsqueda\r\n      const users = await getUserByDocument(document); // users es un array\r\n      setUserId(users.id);\r\n      setErrorMessage(''); // Limpiar mensaje de error\r\n\r\n      // Obtener los fondos asociados al usuario\r\n      const userFunds = await getUserFunds(users.id);\r\n      console.log(userFunds, \"userFundsssssss\");\r\n\r\n      if (userFunds.length === 0) {\r\n        setErrorMessage('Usuario no existe o no tiene transacciones asociadas.');\r\n        setFunds([]); // Limpiar transacciones si no hay datos\r\n      } else {\r\n        // Transformar los datos a la estructura correcta\r\n        const transformedFunds: Fund[] = await Promise.all(\r\n          userFunds.map(async (fund) => {\r\n            // Extraer el documento y el monto del campo details\r\n            const detailsArray = fund.details.split(', ');\r\n            const document = detailsArray[0]?.split(': ')[1] || 'N/A';\r\n            const fundId = detailsArray[1]?.split(': ')[1] || 'N/A';\r\n            const fundDetails = await getFundsById(fundId); // Suponiendo que fetchFundDetails devuelve el nombre del fondo\r\n            const detailsArray2 = fundDetails?.details;\r\n            console.log(detailsArray2, \"Datoo del fondo\");\r\n\r\n              const name = detailsArray2[0]?.split(': ')[1] || 'N/A';\r\n               \r\n            \r\n            \r\n            return {\r\n              document,\r\n              fundId,\r\n              fundName: name // Asumimos que el servicio fetchFundDetails devuelve un objeto con el nombre del fondo\r\n            };\r\n          })\r\n        );\r\n\r\n        setFunds(transformedFunds);\r\n        setErrorMessage(''); // Limpiar mensajes de error\r\n      }\r\n    } catch (error) {\r\n      console.error('Error buscando usuario', error);\r\n      setErrorMessage('Error al buscar el usuario.');\r\n    }\r\n  };\r\n\r\n  // Función para cancelar una suscripción a un fondo\r\n  const handleCancelSubscription = async (fundId: string) => {\r\n    try {\r\n      await cancelFundSubscription(userId, fundId);\r\n      alert('Cancelación exitosa!');\r\n\r\n      // Actualizar la lista de fondos tras la cancelación\r\n      const updatedFunds = funds.filter((fund) => fund.fundId !== fundId);\r\n      setFunds(updatedFunds);\r\n    } catch (error) {\r\n      console.error('Error al cancelar la suscripción', error);\r\n      alert('Error al cancelar la suscripción. Por favor, intenta de nuevo.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fund-cancellation-container\">\r\n      <h2>Cancelar Suscripción a Fondos</h2>\r\n\r\n      {/* Formulario para buscar el usuario por documento */}\r\n      <div className=\"search-user-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={document}\r\n          onChange={(e) => setDocument(e.target.value)}\r\n          placeholder=\"Número de documento\"\r\n        />\r\n        <button onClick={handleSearchUser}>Buscar Usuario</button>\r\n      </div>\r\n\r\n      {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n\r\n      {/* Si el usuario es encontrado, mostrar los fondos */}\r\n      {userId && funds.length > 0 && (\r\n        <table className=\"fund-list-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Fondo</th>\r\n              <th>Acción</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {funds.map((fund) => (\r\n              <tr key={fund.fundId}>\r\n                <td>{fund.fundName}</td> {/* Mostrar el nombre del fondo */}\r\n                <td>\r\n                  <button onClick={() => handleCancelSubscription(fund.fundId)}>\r\n                    Cancelar Suscripción\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n\r\n      {/* Mensaje si no hay fondos asociados */}\r\n      {userId && funds.length === 0 && <p>No hay fondos asociados a este usuario.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FundCancellation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}