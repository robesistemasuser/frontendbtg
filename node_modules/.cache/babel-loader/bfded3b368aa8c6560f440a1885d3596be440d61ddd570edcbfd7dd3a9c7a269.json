{"ast":null,"code":"var _jsxFileName = \"F:\\\\Proyectos\\\\frontendbtg\\\\src\\\\components\\\\FundCancellation\\\\FundCancellation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getUserByDocument, getUserFunds, cancelFundSubscription } from '../../services/api';\nimport './FundCancellation.styles.css';\n\n/**\r\n * Define la estructura del tipo de relación de fondos.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FundCancellation = () => {\n  _s();\n  const [userId, setUserId] = useState(''); // Para almacenar el userId después de la búsqueda\n  const [document, setDocument] = useState(''); // Para almacenar el número de documento ingresado\n  const [funds, setFunds] = useState([]); // Fondos asociados al usuario\n  const [errorMessage, setErrorMessage] = useState(''); // Mensaje de error si no se encuentra el usuario\n\n  // Función para buscar el usuario por el número de documento\n  const handleSearchUser = async () => {\n    try {\n      const users = await getUserByDocument(document); // users es un array\n      console.log(users, \"consultaaaaa\");\n      if (users.length > 0) {\n        const user = users[0]; // Obtener el primer usuario\n        setUserId(user.id);\n        setErrorMessage(''); // Limpiar mensaje de error\n\n        // Obtener los fondos asociados al usuario\n        const userFunds = await getUserFunds(user.id);\n\n        // Transformar los datos al tipo Fund[]\n        const transformedFunds = userFunds.map(fund => ({\n          fundId: fund.id,\n          // Mapear id a fundId\n          fundName: fund.name // Mapear name a fundName\n        }));\n        setFunds(transformedFunds); // Guardar los fondos transformados en el estado\n      } else {\n        setErrorMessage('Usuario no encontrado.');\n        setUserId('');\n        setFunds([]); // Limpiar los fondos si no se encuentra el usuario\n      }\n    } catch (error) {\n      console.error('Error buscando usuario', error);\n      setErrorMessage('Error al buscar el usuario.');\n    }\n  };\n\n  // Función para cancelar una suscripción a un fondo\n  const handleCancelSubscription = async fundId => {\n    try {\n      await cancelFundSubscription(userId, fundId);\n      alert('Cancelación exitosa!');\n\n      // Actualizar la lista de fondos tras la cancelación\n      const updatedFunds = funds.filter(fund => fund.fundId !== fundId);\n      setFunds(updatedFunds);\n    } catch (error) {\n      console.error('Error al cancelar la suscripción', error);\n      alert('Error al cancelar la suscripción. Por favor, intenta de nuevo.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fund-cancellation-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cancelar Suscripci\\xF3n a Fondos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-user-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: document,\n        onChange: e => setDocument(e.target.value),\n        placeholder: \"N\\xFAmero de documento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearchUser,\n        children: \"Buscar Usuario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 24\n    }, this), userId && funds.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"fund-list-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fondo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Acci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: funds.map(fund => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: fund.fundName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCancelSubscription(fund.fundId),\n              children: \"Cancelar Suscripci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, fund.fundId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), userId && funds.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay fondos asociados a este usuario.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 40\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(FundCancellation, \"vnA01e11Kf87RdwfFtGLnV32e60=\");\n_c = FundCancellation;\nexport default FundCancellation;\nvar _c;\n$RefreshReg$(_c, \"FundCancellation\");","map":{"version":3,"names":["React","useState","getUserByDocument","getUserFunds","cancelFundSubscription","jsxDEV","_jsxDEV","FundCancellation","_s","userId","setUserId","document","setDocument","funds","setFunds","errorMessage","setErrorMessage","handleSearchUser","users","console","log","length","user","id","userFunds","transformedFunds","map","fund","fundId","fundName","name","error","handleCancelSubscription","alert","updatedFunds","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["F:/Proyectos/frontendbtg/src/components/FundCancellation/FundCancellation.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { getUserByDocument, getUserFunds, cancelFundSubscription } from '../../services/api';\r\nimport './FundCancellation.styles.css';\r\n\r\n/**\r\n * Define la estructura del tipo de relación de fondos.\r\n */\r\ninterface Fund {\r\n  fundId: string;\r\n  fundName: string;\r\n}\r\n\r\nconst FundCancellation: React.FC = () => {\r\n  const [userId, setUserId] = useState<string>(''); // Para almacenar el userId después de la búsqueda\r\n  const [document, setDocument] = useState<string>(''); // Para almacenar el número de documento ingresado\r\n  const [funds, setFunds] = useState<Fund[]>([]); // Fondos asociados al usuario\r\n  const [errorMessage, setErrorMessage] = useState<string>(''); // Mensaje de error si no se encuentra el usuario\r\n\r\n  // Función para buscar el usuario por el número de documento\r\n  const handleSearchUser = async () => {\r\n    try {\r\n      const users = await getUserByDocument(document); // users es un array\r\n      console.log(users, \"consultaaaaa\");\r\n  \r\n      if (users.length > 0) {\r\n        const user = users[0]; // Obtener el primer usuario\r\n        setUserId(user.id);\r\n        setErrorMessage(''); // Limpiar mensaje de error\r\n  \r\n        // Obtener los fondos asociados al usuario\r\n        const userFunds = await getUserFunds(user.id);\r\n  \r\n        // Transformar los datos al tipo Fund[]\r\n        const transformedFunds: Fund[] = userFunds.map(fund => ({\r\n          fundId: fund.id, // Mapear id a fundId\r\n          fundName: fund.name, // Mapear name a fundName\r\n        }));\r\n  \r\n        setFunds(transformedFunds); // Guardar los fondos transformados en el estado\r\n      } else {\r\n        setErrorMessage('Usuario no encontrado.');\r\n        setUserId('');\r\n        setFunds([]); // Limpiar los fondos si no se encuentra el usuario\r\n      }\r\n    } catch (error) {\r\n      console.error('Error buscando usuario', error);\r\n      setErrorMessage('Error al buscar el usuario.');\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n  // Función para cancelar una suscripción a un fondo\r\n  const handleCancelSubscription = async (fundId: string) => {\r\n    try {\r\n      await cancelFundSubscription(userId, fundId);\r\n      alert('Cancelación exitosa!');\r\n\r\n      // Actualizar la lista de fondos tras la cancelación\r\n      const updatedFunds = funds.filter((fund) => fund.fundId !== fundId);\r\n      setFunds(updatedFunds);\r\n    } catch (error) {\r\n      console.error('Error al cancelar la suscripción', error);\r\n      alert('Error al cancelar la suscripción. Por favor, intenta de nuevo.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fund-cancellation-container\">\r\n      <h2>Cancelar Suscripción a Fondos</h2>\r\n\r\n      {/* Formulario para buscar el usuario por documento */}\r\n      <div className=\"search-user-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={document}\r\n          onChange={(e) => setDocument(e.target.value)}\r\n          placeholder=\"Número de documento\"\r\n        />\r\n        <button onClick={handleSearchUser}>Buscar Usuario</button>\r\n      </div>\r\n\r\n      {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n\r\n      {/* Si el usuario es encontrado, mostrar los fondos */}\r\n      {userId && funds.length > 0 && (\r\n        <table className=\"fund-list-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Fondo</th>\r\n              <th>Acción</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {funds.map((fund) => (\r\n              <tr key={fund.fundId}>\r\n                <td>{fund.fundName}</td>\r\n                <td>\r\n                  <button onClick={() => handleCancelSubscription(fund.fundId)}>\r\n                    Cancelar Suscripción\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n\r\n      {/* Mensaje si no hay fondos asociados */}\r\n      {userId && funds.length === 0 && <p>No hay fondos asociados a este usuario.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FundCancellation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}