{"ast":null,"code":"var _jsxFileName = \"F:\\\\Proyectos\\\\frontendbtg\\\\src\\\\components\\\\FundSubscription\\\\FundSubscription.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { subscribeToFund, sendNotification, fetchUserByDocument, fetchFunds } from '../../services/api';\nimport './FundSubscription.styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FundSubscription = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    document: '',\n    fundId: '',\n    amount: 0,\n    notifyBy: 'email'\n  });\n  const [userId, setUserId] = useState(null);\n  const [funds, setFunds] = useState([]);\n  const [isUserValid, setIsUserValid] = useState(false);\n  useEffect(() => {\n    const loadFunds = async () => {\n      try {\n        const fundsList = await fetchFunds();\n        setFunds(fundsList);\n      } catch (error) {\n        console.error('Error fetching funds', error);\n        alert('Could not fetch funds. Please try again later.');\n      }\n    };\n    loadFunds();\n  }, []);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleFetchUser = async () => {\n    if (formData.document) {\n      try {\n        const user = await fetchUserByDocument(formData.document);\n        setUserId(user.id);\n        setIsUserValid(true);\n        alert('User found!');\n      } catch (error) {\n        console.error('Error fetching user', error);\n        alert('User not found. Please check the document.');\n        setIsUserValid(false);\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userId) {\n      alert('Please validate the user document first.');\n      return;\n    }\n    try {\n      const subscriptionData = {\n        userId,\n        fundId: formData.fundId,\n        document: formData.document,\n        transactionType: 'subscribe',\n        amount: Number(formData.amount),\n        active: true\n      };\n      await subscribeToFund(subscriptionData);\n      await sendNotification('You have subscribed to the fund.', formData.notifyBy);\n      alert('Subscription successful!');\n    } catch (error) {\n      console.error('Error subscribing to fund', error);\n      alert('Subscription failed. Please try again.');\n    }\n  };\n  const isFormValid = () => {\n    return isUserValid && formData.fundId && formData.amount > 0;\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"fund-subscription-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Subscribe to a Fund\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"document\",\n      placeholder: \"Document\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleFetchUser,\n      className: \"fetch-user-button\",\n      children: \"Validate Document\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"fundId\",\n      onChange: handleChange,\n      disabled: !isUserValid,\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a Fund\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), funds.map(fund => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: fund.id,\n        children: fund.name\n      }, fund.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"amount\",\n      placeholder: \"Amount\",\n      onChange: handleChange,\n      disabled: !isUserValid,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"notifyBy\",\n      onChange: handleChange,\n      disabled: !isUserValid,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"sms\",\n        children: \"SMS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: `subscribe-button ${!isFormValid() ? 'inactive' : ''}`,\n      disabled: !isFormValid(),\n      children: \"Subscribe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(FundSubscription, \"50NlAR9i3JWZippzcbkhoYx80qk=\");\n_c = FundSubscription;\nexport default FundSubscription;\nvar _c;\n$RefreshReg$(_c, \"FundSubscription\");","map":{"version":3,"names":["React","useEffect","useState","subscribeToFund","sendNotification","fetchUserByDocument","fetchFunds","jsxDEV","_jsxDEV","FundSubscription","_s","formData","setFormData","document","fundId","amount","notifyBy","userId","setUserId","funds","setFunds","isUserValid","setIsUserValid","loadFunds","fundsList","error","console","alert","handleChange","e","target","name","value","handleFetchUser","user","id","handleSubmit","preventDefault","subscriptionData","transactionType","Number","active","isFormValid","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","onClick","disabled","map","fund","_c","$RefreshReg$"],"sources":["F:/Proyectos/frontendbtg/src/components/FundSubscription/FundSubscription.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { subscribeToFund, sendNotification, fetchUserByDocument, fetchFunds } from '../../services/api';\r\nimport './FundSubscription.styles.css';\r\n\r\nconst FundSubscription: React.FC = () => {\r\n  const [formData, setFormData] = useState({\r\n    document: '',\r\n    fundId: '',\r\n    amount: 0,\r\n    notifyBy: 'email'\r\n  });\r\n  const [userId, setUserId] = useState<string | null>(null);\r\n  const [funds, setFunds] = useState<{ id: string; name: string }[]>([]);\r\n  const [isUserValid, setIsUserValid] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const loadFunds = async () => {\r\n      try {\r\n        const fundsList = await fetchFunds();\r\n        setFunds(fundsList);\r\n      } catch (error) {\r\n        console.error('Error fetching funds', error);\r\n        alert('Could not fetch funds. Please try again later.');\r\n      }\r\n    };\r\n\r\n    loadFunds();\r\n  }, []);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleFetchUser = async () => {\r\n    if (formData.document) {\r\n      try {\r\n        const user = await fetchUserByDocument(formData.document);\r\n        setUserId(user.id);\r\n        setIsUserValid(true);\r\n        alert('User found!');\r\n      } catch (error) {\r\n        console.error('Error fetching user', error);\r\n        alert('User not found. Please check the document.');\r\n        setIsUserValid(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (!userId) {\r\n      alert('Please validate the user document first.');\r\n      return;\r\n    }\r\n    try {\r\n      const subscriptionData = {\r\n        userId,\r\n        fundId: formData.fundId,\r\n        document: formData.document,\r\n        transactionType: 'subscribe',\r\n        amount: Number(formData.amount),\r\n        active: true,\r\n      };\r\n\r\n      await subscribeToFund(subscriptionData);\r\n      await sendNotification('You have subscribed to the fund.', formData.notifyBy);\r\n      alert('Subscription successful!');\r\n    } catch (error) {\r\n      console.error('Error subscribing to fund', error);\r\n      alert('Subscription failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    return isUserValid && formData.fundId && formData.amount > 0;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"fund-subscription-form\">\r\n      <h2>Subscribe to a Fund</h2>\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"document\"\r\n        placeholder=\"Document\"\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <button type=\"button\" onClick={handleFetchUser} className=\"fetch-user-button\">\r\n        Validate Document\r\n      </button>\r\n\r\n      <select \r\n        name=\"fundId\" \r\n        onChange={handleChange} \r\n        disabled={!isUserValid} \r\n        required\r\n      >\r\n        <option value=\"\">Select a Fund</option>\r\n        {funds.map(fund => (\r\n          <option key={fund.id} value={fund.id}>\r\n            {fund.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      \r\n      <input\r\n        type=\"number\"\r\n        name=\"amount\"\r\n        placeholder=\"Amount\"\r\n        onChange={handleChange}\r\n        disabled={!isUserValid} \r\n        required\r\n      />\r\n\r\n      <select name=\"notifyBy\" onChange={handleChange} disabled={!isUserValid}>\r\n        <option value=\"email\">Email</option>\r\n        <option value=\"sms\">SMS</option>\r\n      </select>\r\n\r\n      <button \r\n        type=\"submit\" \r\n        className={`subscribe-button ${!isFormValid() ? 'inactive' : ''}`} \r\n        disabled={!isFormValid()}\r\n      >\r\n        Subscribe\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FundSubscription;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}