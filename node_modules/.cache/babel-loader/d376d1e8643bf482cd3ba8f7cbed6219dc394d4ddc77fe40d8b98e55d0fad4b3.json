{"ast":null,"code":"var _jsxFileName = \"F:\\\\Proyectos\\\\frontendbtg\\\\src\\\\components\\\\FundSubscription\\\\FundSubscription.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { subscribeToFund, sendNotification } from '../../services/api';\nimport './FundSubscription.styles.css';\n\n/**\r\n * Componente para suscribirse a un fondo.\r\n * Permite al usuario ingresar detalles del fondo y su método de notificación.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FundSubscription = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    notifyBy: 'email'\n  });\n\n  /**\r\n   * Maneja los cambios en el formulario.\r\n   * @param e Evento de cambio\r\n   */\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  /**\r\n   * Maneja el envío del formulario.\r\n   * Suscribe al usuario al fondo y envía una notificación.\r\n   * @param e Evento de envío\r\n   */\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await subscribeToFund(formData.name);\n      await sendNotification('You have subscribed to the fund.');\n      alert('Subscription successful!');\n    } catch (error) {\n      console.error('Error subscribing to fund', error);\n      alert('Subscription failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"fund-subscription-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Subscribe to a Fund\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Fund Name\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"notifyBy\",\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"sms\",\n        children: \"SMS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Subscribe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(FundSubscription, \"VGYnbviabPc0tRHOE2f6LEZ13Bo=\");\n_c = FundSubscription;\nexport default FundSubscription;\nvar _c;\n$RefreshReg$(_c, \"FundSubscription\");","map":{"version":3,"names":["React","useState","subscribeToFund","sendNotification","jsxDEV","_jsxDEV","FundSubscription","_s","formData","setFormData","name","email","notifyBy","handleChange","e","target","value","handleSubmit","preventDefault","alert","error","console","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["F:/Proyectos/frontendbtg/src/components/FundSubscription/FundSubscription.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { subscribeToFund, sendNotification } from '../../services/api';\r\nimport './FundSubscription.styles.css';\r\n\r\n/**\r\n * Componente para suscribirse a un fondo.\r\n * Permite al usuario ingresar detalles del fondo y su método de notificación.\r\n */\r\nconst FundSubscription: React.FC = () => {\r\n  const [formData, setFormData] = useState({ name: '', email: '', notifyBy: 'email' });\r\n\r\n  /**\r\n   * Maneja los cambios en el formulario.\r\n   * @param e Evento de cambio\r\n   */\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  /**\r\n   * Maneja el envío del formulario.\r\n   * Suscribe al usuario al fondo y envía una notificación.\r\n   * @param e Evento de envío\r\n   */\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    try {\r\n      await subscribeToFund(formData.name);\r\n      await sendNotification('You have subscribed to the fund.' );\r\n      alert('Subscription successful!');\r\n    } catch (error) {\r\n      console.error('Error subscribing to fund', error);\r\n      alert('Subscription failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"fund-subscription-form\">\r\n      <h2>Subscribe to a Fund</h2>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Fund Name\"\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <select name=\"notifyBy\" onChange={handleChange}>\r\n        <option value=\"email\">Email</option>\r\n        <option value=\"sms\">SMS</option>\r\n      </select>\r\n      <button type=\"submit\">Subscribe</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FundSubscription;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}