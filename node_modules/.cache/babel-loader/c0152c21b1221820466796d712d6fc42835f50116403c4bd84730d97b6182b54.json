{"ast":null,"code":"var _jsxFileName = \"F:\\\\Proyectos\\\\frontendbtg\\\\src\\\\components\\\\FundSubscription\\\\FundSubscription.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { subscribeToFund, sendNotification, fetchUserByDocument } from '../../services/api';\nimport './FundSubscription.styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FundSubscription = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    document: '',\n    fundId: '',\n    amount: 0,\n    notifyBy: 'email'\n  });\n  const [userId, setUserId] = useState(null); // Estado para almacenar el ID del usuario\n\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleFetchUser = async () => {\n    if (formData.document) {\n      try {\n        const user = await fetchUserByDocument(formData.document);\n        setUserId(user.id);\n        alert('User found!'); // Notificación de éxito\n      } catch (error) {\n        console.error('Error fetching user', error);\n        alert('User not found. Please check the document.');\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userId) {\n      alert('Please validate the user document first.');\n      return;\n    }\n    try {\n      // Aquí deberías asegurarte de tener el fundId correcto\n      const subscriptionData = {\n        userId,\n        fundId: formData.fundId,\n        transactionType: 'subscribe',\n        amount: formData.amount,\n        active: true\n      };\n\n      // Aquí llamas a tu función de suscripción al fondo\n      await subscribeToFund(subscriptionData);\n      await sendNotification('You have subscribed to the fund.', formData.notifyBy);\n      alert('Subscription successful!');\n    } catch (error) {\n      console.error('Error subscribing to fund', error);\n      alert('Subscription failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"fund-subscription-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Subscribe to a Fund\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"document\",\n      placeholder: \"Document\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleFetchUser,\n      className: \"fetch-user-button\",\n      children: \"Validate Document\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"fundId\",\n      placeholder: \"Fund ID\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"amount\",\n      placeholder: \"Amount\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"notifyBy\",\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"sms\",\n        children: \"SMS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Subscribe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(FundSubscription, \"C9qf+8rAVFw4dvsFwnBuc7cv+zA=\");\n_c = FundSubscription;\nexport default FundSubscription;\nvar _c;\n$RefreshReg$(_c, \"FundSubscription\");","map":{"version":3,"names":["React","useState","subscribeToFund","sendNotification","fetchUserByDocument","jsxDEV","_jsxDEV","FundSubscription","_s","formData","setFormData","document","fundId","amount","notifyBy","userId","setUserId","handleChange","e","target","name","value","handleFetchUser","user","id","alert","error","console","handleSubmit","preventDefault","subscriptionData","transactionType","active","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","onClick","_c","$RefreshReg$"],"sources":["F:/Proyectos/frontendbtg/src/components/FundSubscription/FundSubscription.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { subscribeToFund, sendNotification, fetchUserByDocument } from '../../services/api';\r\nimport './FundSubscription.styles.css';\r\n\r\nconst FundSubscription: React.FC = () => {\r\n  const [formData, setFormData] = useState({ document: '', fundId: '', amount: 0, notifyBy: 'email' });\r\n  const [userId, setUserId] = useState<string | null>(null); // Estado para almacenar el ID del usuario\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleFetchUser = async () => {\r\n    if (formData.document) {\r\n      try {\r\n        const user = await fetchUserByDocument(formData.document);\r\n        setUserId(user.id);\r\n        alert('User found!'); // Notificación de éxito\r\n      } catch (error) {\r\n        console.error('Error fetching user', error);\r\n        alert('User not found. Please check the document.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (!userId) {\r\n      alert('Please validate the user document first.');\r\n      return;\r\n    }\r\n    try {\r\n      // Aquí deberías asegurarte de tener el fundId correcto\r\n      const subscriptionData = {\r\n        userId,\r\n        fundId: formData.fundId,\r\n        transactionType: 'subscribe',\r\n        amount: formData.amount,\r\n        active: true,\r\n      };\r\n\r\n      // Aquí llamas a tu función de suscripción al fondo\r\n      await subscribeToFund(subscriptionData);\r\n      await sendNotification('You have subscribed to the fund.', formData.notifyBy);\r\n      alert('Subscription successful!');\r\n    } catch (error) {\r\n      console.error('Error subscribing to fund', error);\r\n      alert('Subscription failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"fund-subscription-form\">\r\n      <h2>Subscribe to a Fund</h2>\r\n\r\n      {/* Campo para el documento */}\r\n      <input\r\n        type=\"text\"\r\n        name=\"document\"\r\n        placeholder=\"Document\"\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <button type=\"button\" onClick={handleFetchUser} className=\"fetch-user-button\">\r\n        Validate Document\r\n      </button>\r\n\r\n      {/* Selección de fondos */}\r\n      <input\r\n        type=\"text\"\r\n        name=\"fundId\"\r\n        placeholder=\"Fund ID\"\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      \r\n      {/* Campo para el monto */}\r\n      <input\r\n        type=\"number\"\r\n        name=\"amount\"\r\n        placeholder=\"Amount\"\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      {/* Método de notificación */}\r\n      <select name=\"notifyBy\" onChange={handleChange}>\r\n        <option value=\"email\">Email</option>\r\n        <option value=\"sms\">SMS</option>\r\n      </select>\r\n\r\n      <button type=\"submit\">Subscribe</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FundSubscription;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}