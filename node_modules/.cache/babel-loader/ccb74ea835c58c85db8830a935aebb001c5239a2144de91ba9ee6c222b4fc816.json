{"ast":null,"code":"var _jsxFileName = \"F:\\\\Proyectos\\\\frontendbtg\\\\src\\\\components\\\\TransactionHistory\\\\TransactionHistory.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getTransactionHistory } from '../../services/api';\nimport './TransactionHistory.styles.css';\n\n/**\r\n * Define la estructura del tipo de las transacciones.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\r\n * Componente para mostrar el historial de transacciones.\r\n * Muestra las transacciones recientes de apertura y cancelación.\r\n */\nconst TransactionHistory = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [userId, setUserId] = useState(''); // Para almacenar el número de documento\n  const [errorMessage, setErrorMessage] = useState(''); // Para mostrar mensajes de error\n\n  const handleFetchTransactions = async () => {\n    try {\n      const data = await getTransactionHistory(userId);\n      if (data.length === 0) {\n        setErrorMessage('Usuario no existe o no tiene transacciones asociadas.');\n        setTransactions([]); // Limpiar transacciones si no hay datos\n      } else {\n        // Transformar los datos a la estructura correcta\n        const transformedData = data.map(transaction => {\n          var _transaction$document, _transaction$amount, _transaction$transact, _transaction$transact2;\n          // Asegúrate de que las propiedades existen antes de acceder a ellas\n          return {\n            documento: ((_transaction$document = transaction.documento) === null || _transaction$document === void 0 ? void 0 : _transaction$document.S) || 'N/A',\n            // Cambia a 'N/A' si es undefined\n            amount: parseFloat(((_transaction$amount = transaction.amount) === null || _transaction$amount === void 0 ? void 0 : _transaction$amount.N) || '0'),\n            // Cambia a 0 si es undefined\n            transactionType: ((_transaction$transact = transaction.transactionType) === null || _transaction$transact === void 0 ? void 0 : _transaction$transact.S) || 'N/A',\n            // Cambia a 'N/A' si es undefined\n            transactionDate: ((_transaction$transact2 = transaction.transactionDate) === null || _transaction$transact2 === void 0 ? void 0 : _transaction$transact2.S) || 'N/A' // Cambia a 'N/A' si es undefined\n          };\n        });\n        setTransactions(transformedData);\n        setErrorMessage(''); // Limpiar mensajes de error\n      }\n    } catch (error) {\n      setErrorMessage('Error al obtener el historial de transacciones.');\n      console.error('Error fetching transaction history', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-history\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transaction History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Ingrese el n\\xFAmero de documento\",\n      value: userId,\n      onChange: e => setUserId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchTransactions,\n      children: \"Buscar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 24\n    }, this), transactions.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Documento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Monto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tipo de Transacci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fecha de Transacci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.documento\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.transactionType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.transactionDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionHistory, \"9KbdXkNNcHulS6wlumETib7oQ3c=\");\n_c = TransactionHistory;\nexport default TransactionHistory;\nvar _c;\n$RefreshReg$(_c, \"TransactionHistory\");","map":{"version":3,"names":["React","useState","getTransactionHistory","jsxDEV","_jsxDEV","TransactionHistory","_s","transactions","setTransactions","userId","setUserId","errorMessage","setErrorMessage","handleFetchTransactions","data","length","transformedData","map","transaction","_transaction$document","_transaction$amount","_transaction$transact","_transaction$transact2","documento","S","amount","parseFloat","N","transactionType","transactionDate","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","index","_c","$RefreshReg$"],"sources":["F:/Proyectos/frontendbtg/src/components/TransactionHistory/TransactionHistory.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getTransactionHistory } from '../../services/api';\r\nimport './TransactionHistory.styles.css';\r\n\r\n/**\r\n * Define la estructura del tipo de las transacciones.\r\n */\r\ninterface Transaction {\r\n  documento: string;\r\n  amount: number;\r\n  transactionType: string;\r\n  transactionDate: string;\r\n}\r\n\r\n/**\r\n * Componente para mostrar el historial de transacciones.\r\n * Muestra las transacciones recientes de apertura y cancelación.\r\n */\r\nconst TransactionHistory: React.FC = () => {\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  const [userId, setUserId] = useState<string>(''); // Para almacenar el número de documento\r\n  const [errorMessage, setErrorMessage] = useState<string>(''); // Para mostrar mensajes de error\r\n\r\n  const handleFetchTransactions = async () => {\r\n    try {\r\n      const data = await getTransactionHistory(userId);\r\n      if (data.length === 0) {\r\n        setErrorMessage('Usuario no existe o no tiene transacciones asociadas.');\r\n        setTransactions([]); // Limpiar transacciones si no hay datos\r\n      } else {\r\n        // Transformar los datos a la estructura correcta\r\n        const transformedData: Transaction[] = data.map((transaction) => {\r\n          // Asegúrate de que las propiedades existen antes de acceder a ellas\r\n          return {\r\n            documento: transaction.documento?.S || 'N/A', // Cambia a 'N/A' si es undefined\r\n            amount: parseFloat(transaction.amount?.N || '0'), // Cambia a 0 si es undefined\r\n            transactionType: transaction.transactionType?.S || 'N/A', // Cambia a 'N/A' si es undefined\r\n            transactionDate: transaction.transactionDate?.S || 'N/A', // Cambia a 'N/A' si es undefined\r\n          };\r\n        });\r\n\r\n        setTransactions(transformedData);\r\n        setErrorMessage(''); // Limpiar mensajes de error\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage('Error al obtener el historial de transacciones.');\r\n      console.error('Error fetching transaction history', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"transaction-history\">\r\n      <h2>Transaction History</h2>\r\n      \r\n      {/* Input para el número de documento */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Ingrese el número de documento\"\r\n        value={userId}\r\n        onChange={(e) => setUserId(e.target.value)}\r\n      />\r\n      <button onClick={handleFetchTransactions}>Buscar</button>\r\n      \r\n      {/* Mostrar mensaje de error si existe */}\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      \r\n      {/* Mostrar tabla si hay transacciones */}\r\n      {transactions.length > 0 && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Documento</th>\r\n              <th>Monto</th>\r\n              <th>Tipo de Transacción</th>\r\n              <th>Fecha de Transacción</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {transactions.map((transaction, index) => (\r\n              <tr key={index}>\r\n                <td>{transaction.documento}</td>\r\n                <td>{transaction.amount}</td>\r\n                <td>{transaction.transactionType}</td>\r\n                <td>{transaction.transactionDate}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionHistory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}