{"ast":null,"code":"var _jsxFileName = \"F:\\\\Proyectos\\\\frontendbtg\\\\src\\\\components\\\\TransactionHistory\\\\TransactionHistory.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getTransactionHistory } from '../../services/api';\nimport './TransactionHistory.styles.css';\n\n/**\r\n * Define la estructura del tipo de las transacciones.\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n/**\r\n * Componente para mostrar el historial de transacciones.\r\n * Muestra las transacciones recientes de apertura y cancelación.\r\n */\nconst TransactionHistory = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [userId, setUserId] = useState(''); // Para almacenar el número de documento\n  const [errorMessage, setErrorMessage] = useState(''); // Para mostrar mensajes de error\n  const [currentPage, setCurrentPage] = useState(1); // Página actual\n  const itemsPerPage = 10; // Elementos por página\n\n  const handleFetchTransactions = async () => {\n    try {\n      const data = await getTransactionHistory(userId);\n      if (data.length === 0) {\n        setErrorMessage('Usuario no existe o no tiene transacciones asociadas.');\n        setTransactions([]); // Limpiar transacciones si no hay datos\n      } else {\n        // Transformar los datos a la estructura correcta\n        const transformedData = data.map(transaction => {\n          var _transaction$document, _transaction$amount, _transaction$transact, _transaction$transact2;\n          return {\n            documento: ((_transaction$document = transaction.documento) === null || _transaction$document === void 0 ? void 0 : _transaction$document.S) || 'N/A',\n            amount: parseFloat(((_transaction$amount = transaction.amount) === null || _transaction$amount === void 0 ? void 0 : _transaction$amount.N) || '0'),\n            transactionType: ((_transaction$transact = transaction.transactionType) === null || _transaction$transact === void 0 ? void 0 : _transaction$transact.S) || 'N/A',\n            transactionDate: ((_transaction$transact2 = transaction.transactionDate) === null || _transaction$transact2 === void 0 ? void 0 : _transaction$transact2.S) || 'N/A'\n          };\n        });\n        setTransactions(transformedData);\n        setErrorMessage(''); // Limpiar mensajes de error\n      }\n    } catch (error) {\n      setErrorMessage('Error al obtener el historial de transacciones.');\n      console.error('Error fetching transaction history', error);\n    }\n  };\n\n  // Lógica de paginación\n  const indexOfLastTransaction = currentPage * itemsPerPage;\n  const indexOfFirstTransaction = indexOfLastTransaction - itemsPerPage;\n  const currentTransactions = transactions.slice(indexOfFirstTransaction, indexOfLastTransaction);\n  const totalPages = Math.ceil(transactions.length / itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-history\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transaction History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Ingrese el n\\xFAmero de documento\",\n      value: userId,\n      onChange: e => setUserId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchTransactions,\n      children: \"Buscar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 24\n    }, this), currentTransactions.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Documento\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Monto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tipo de Transacci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fecha de Transacci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: currentTransactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + indexOfFirstTransaction + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.documento\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.transactionType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.transactionDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: Array.from({\n          length: totalPages\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-button\",\n          onClick: () => setCurrentPage(index + 1),\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionHistory, \"lum4cy/ur/keaogoR8AfpCqrEks=\");\n_c = TransactionHistory;\nexport default TransactionHistory;\nvar _c;\n$RefreshReg$(_c, \"TransactionHistory\");","map":{"version":3,"names":["React","useState","getTransactionHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","TransactionHistory","_s","transactions","setTransactions","userId","setUserId","errorMessage","setErrorMessage","currentPage","setCurrentPage","itemsPerPage","handleFetchTransactions","data","length","transformedData","map","transaction","_transaction$document","_transaction$amount","_transaction$transact","_transaction$transact2","documento","S","amount","parseFloat","N","transactionType","transactionDate","error","console","indexOfLastTransaction","indexOfFirstTransaction","currentTransactions","slice","totalPages","Math","ceil","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","index","Array","from","_","_c","$RefreshReg$"],"sources":["F:/Proyectos/frontendbtg/src/components/TransactionHistory/TransactionHistory.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getTransactionHistory } from '../../services/api';\r\nimport './TransactionHistory.styles.css';\r\n\r\n/**\r\n * Define la estructura del tipo de las transacciones.\r\n */\r\ninterface Transaction {\r\n  documento: string;\r\n  amount: number;\r\n  transactionType: string;\r\n  transactionDate: string;\r\n}\r\n\r\n/**\r\n * Componente para mostrar el historial de transacciones.\r\n * Muestra las transacciones recientes de apertura y cancelación.\r\n */\r\nconst TransactionHistory: React.FC = () => {\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  const [userId, setUserId] = useState<string>(''); // Para almacenar el número de documento\r\n  const [errorMessage, setErrorMessage] = useState<string>(''); // Para mostrar mensajes de error\r\n  const [currentPage, setCurrentPage] = useState<number>(1); // Página actual\r\n  const itemsPerPage = 10; // Elementos por página\r\n\r\n  const handleFetchTransactions = async () => {\r\n    try {\r\n      const data = await getTransactionHistory(userId);\r\n      if (data.length === 0) {\r\n        setErrorMessage('Usuario no existe o no tiene transacciones asociadas.');\r\n        setTransactions([]); // Limpiar transacciones si no hay datos\r\n      } else {\r\n        // Transformar los datos a la estructura correcta\r\n        const transformedData: Transaction[] = data.map((transaction) => {\r\n          return {\r\n            documento: transaction.documento?.S || 'N/A',\r\n            amount: parseFloat(transaction.amount?.N || '0'),\r\n            transactionType: transaction.transactionType?.S || 'N/A',\r\n            transactionDate: transaction.transactionDate?.S || 'N/A',\r\n          };\r\n        });\r\n\r\n        setTransactions(transformedData);\r\n        setErrorMessage(''); // Limpiar mensajes de error\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage('Error al obtener el historial de transacciones.');\r\n      console.error('Error fetching transaction history', error);\r\n    }\r\n  };\r\n\r\n  // Lógica de paginación\r\n  const indexOfLastTransaction = currentPage * itemsPerPage;\r\n  const indexOfFirstTransaction = indexOfLastTransaction - itemsPerPage;\r\n  const currentTransactions = transactions.slice(indexOfFirstTransaction, indexOfLastTransaction);\r\n  const totalPages = Math.ceil(transactions.length / itemsPerPage);\r\n\r\n  return (\r\n    <div className=\"transaction-history\">\r\n      <h2>Transaction History</h2>\r\n      \r\n      {/* Input para el número de documento */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Ingrese el número de documento\"\r\n        value={userId}\r\n        onChange={(e) => setUserId(e.target.value)}\r\n      />\r\n      <button onClick={handleFetchTransactions}>Buscar</button>\r\n      \r\n      {/* Mostrar mensaje de error si existe */}\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      \r\n      {/* Mostrar tabla si hay transacciones */}\r\n      {currentTransactions.length > 0 && (\r\n        <>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Documento</th>\r\n                <th>Monto</th>\r\n                <th>Tipo de Transacción</th>\r\n                <th>Fecha de Transacción</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {currentTransactions.map((transaction, index) => (\r\n                <tr key={index}>\r\n                  <td>{index + indexOfFirstTransaction + 1}</td> {/* Muestra el índice + 1 */}\r\n                  <td>{transaction.documento}</td>\r\n                  <td>{transaction.amount}</td>\r\n                  <td>{transaction.transactionType}</td>\r\n                  <td>{transaction.transactionDate}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          {/* Paginación */}\r\n          <div className=\"pagination\">\r\n            {Array.from({ length: totalPages }, (_, index) => (\r\n              <button\r\n                key={index}\r\n                className=\"page-button\"\r\n                onClick={() => setCurrentPage(index + 1)}\r\n              >\r\n                {index + 1}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionHistory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}