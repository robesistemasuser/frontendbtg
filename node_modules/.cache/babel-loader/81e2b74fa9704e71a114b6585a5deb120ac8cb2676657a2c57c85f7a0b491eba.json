{"ast":null,"code":"var _jsxFileName = \"F:\\\\Proyectos\\\\frontendbtg\\\\src\\\\components\\\\TransactionHistory\\\\TransactionHistory.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getTransactionHistory } from '../../services/api';\nimport './TransactionHistory.styles.css';\n\n/**\r\n * Define la estructura del tipo de las transacciones.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\r\n * Componente para mostrar el historial de transacciones.\r\n * Muestra las transacciones recientes de apertura y cancelación.\r\n */\nconst TransactionHistory = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [documento, setUserId] = useState(''); // Para almacenar el número de documento\n  const [errorMessage, setErrorMessage] = useState(''); // Para mostrar mensajes de error\n\n  const handleFetchTransactions = async () => {\n    try {\n      const data = await getTransactionHistory(documento);\n      if (data.length === 0) {\n        setErrorMessage('Usuario no existe o no tiene transacciones asociadas.');\n        setTransactions([]); // Limpiar transacciones si no hay datos\n      } else {\n        // Transformar los datos a la estructura correcta\n        const transformedData = data.map(transaction => ({\n          documento: transaction.documento.S,\n          // Asegúrate de que el campo corresponda a la respuesta real\n          amount: parseFloat(transaction.amount.N),\n          // Convertir a número\n          transactionType: transaction.transactionType.S,\n          // Asegúrate de que el campo corresponda a la respuesta real\n          transactionDate: transaction.transactionDate.S // Asegúrate de que el campo corresponda a la respuesta real\n        }));\n        setTransactions(transformedData);\n        setErrorMessage(''); // Limpiar mensajes de error\n      }\n    } catch (error) {\n      setErrorMessage('Error al obtener el historial de transacciones.');\n      console.error('Error fetching transaction history', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-history\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transaction History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Ingrese el n\\xFAmero de documento\",\n      value: documento,\n      onChange: e => setUserId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchTransactions,\n      children: \"Buscar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 24\n    }, this), transactions.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Documento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Monto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tipo de Transacci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fecha de Transacci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.documento\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.transactionType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.transactionDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionHistory, \"79XmsSzYKNkUBcfKj5Y7MpyKkmY=\");\n_c = TransactionHistory;\nexport default TransactionHistory;\nvar _c;\n$RefreshReg$(_c, \"TransactionHistory\");","map":{"version":3,"names":["React","useState","getTransactionHistory","jsxDEV","_jsxDEV","TransactionHistory","_s","transactions","setTransactions","documento","setUserId","errorMessage","setErrorMessage","handleFetchTransactions","data","length","transformedData","map","transaction","S","amount","parseFloat","N","transactionType","transactionDate","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","index","_c","$RefreshReg$"],"sources":["F:/Proyectos/frontendbtg/src/components/TransactionHistory/TransactionHistory.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getTransactionHistory } from '../../services/api';\r\nimport './TransactionHistory.styles.css';\r\n\r\n/**\r\n * Define la estructura del tipo de las transacciones.\r\n */\r\ninterface Transaction {\r\n  documento: string;\r\n  amount: number;\r\n  transactionType: string;\r\n  transactionDate: string;\r\n}\r\n\r\n/**\r\n * Componente para mostrar el historial de transacciones.\r\n * Muestra las transacciones recientes de apertura y cancelación.\r\n */\r\nconst TransactionHistory: React.FC = () => {\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  const [documento, setUserId] = useState<string>(''); // Para almacenar el número de documento\r\n  const [errorMessage, setErrorMessage] = useState<string>(''); // Para mostrar mensajes de error\r\n\r\n  const handleFetchTransactions = async () => {\r\n    try {\r\n      const data = await getTransactionHistory(documento);\r\n      if (data.length === 0) {\r\n        setErrorMessage('Usuario no existe o no tiene transacciones asociadas.');\r\n        setTransactions([]); // Limpiar transacciones si no hay datos\r\n      } else {\r\n        // Transformar los datos a la estructura correcta\r\n        const transformedData: Transaction[] = data.map((transaction) => ({\r\n          documento: transaction.documento.S, // Asegúrate de que el campo corresponda a la respuesta real\r\n          amount: parseFloat(transaction.amount.N), // Convertir a número\r\n          transactionType: transaction.transactionType.S, // Asegúrate de que el campo corresponda a la respuesta real\r\n          transactionDate: transaction.transactionDate.S, // Asegúrate de que el campo corresponda a la respuesta real\r\n        }));\r\n\r\n        setTransactions(transformedData);\r\n        setErrorMessage(''); // Limpiar mensajes de error\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage('Error al obtener el historial de transacciones.');\r\n      console.error('Error fetching transaction history', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"transaction-history\">\r\n      <h2>Transaction History</h2>\r\n      \r\n      {/* Input para el número de documento */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Ingrese el número de documento\"\r\n        value={documento}\r\n        onChange={(e) => setUserId(e.target.value)}\r\n      />\r\n      <button onClick={handleFetchTransactions}>Buscar</button>\r\n      \r\n      {/* Mostrar mensaje de error si existe */}\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      \r\n      {/* Mostrar tabla si hay transacciones */}\r\n      {transactions.length > 0 && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Documento</th>\r\n              <th>Monto</th>\r\n              <th>Tipo de Transacción</th>\r\n              <th>Fecha de Transacción</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {transactions.map((transaction, index) => (\r\n              <tr key={index}>\r\n                <td>{transaction.documento}</td>\r\n                <td>{transaction.amount}</td>\r\n                <td>{transaction.transactionType}</td>\r\n                <td>{transaction.transactionDate}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionHistory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}