{"ast":null,"code":"var _jsxFileName = \"F:\\\\Proyectos\\\\frontendbtg\\\\src\\\\components\\\\FundSubscription\\\\FundSubscription.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { subscribeToFund, sendNotification, fetchUserByDocument, fetchFunds } from '../../services/api';\nimport './FundSubscription.styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FundSubscription = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    document: '',\n    fundId: '',\n    amount: 0,\n    notifyBy: 'email'\n  });\n  const [userId, setUserId] = useState(null); // Estado para almacenar el ID del usuario\n  const [funds, setFunds] = useState([]); // Estado para almacenar los fondos\n\n  useEffect(() => {\n    const loadFunds = async () => {\n      try {\n        const fundsList = await fetchFunds(); // Llamada al servicio para obtener los fondos\n        setFunds(fundsList);\n      } catch (error) {\n        console.error('Error fetching funds', error);\n        alert('Could not fetch funds. Please try again later.');\n      }\n    };\n    loadFunds();\n  }, []);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleFetchUser = async () => {\n    if (formData.document) {\n      try {\n        const user = await fetchUserByDocument(formData.document);\n        setUserId(user.id);\n        alert('User found!'); // Notificación de éxito\n      } catch (error) {\n        console.error('Error fetching user', error);\n        alert('User not found. Please check the document.');\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userId) {\n      alert('Please validate the user document first.');\n      return;\n    }\n    try {\n      const subscriptionData = {\n        userId,\n        fundId: formData.fundId,\n        transactionType: 'subscribe',\n        amount: formData.amount,\n        active: true\n      };\n      await subscribeToFund(subscriptionData);\n      await sendNotification('You have subscribed to the fund.', formData.notifyBy);\n      alert('Subscription successful!');\n    } catch (error) {\n      console.error('Error subscribing to fund', error);\n      alert('Subscription failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"fund-subscription-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Subscribe to a Fund\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"document\",\n      placeholder: \"Document\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleFetchUser,\n      className: \"fetch-user-button\",\n      children: \"Validate Document\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"fundId\",\n      onChange: handleChange,\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a Fund\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), funds.map(fund => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: fund.id,\n        children: fund.name\n      }, fund.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"amount\",\n      placeholder: \"Amount\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"notifyBy\",\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"sms\",\n        children: \"SMS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Subscribe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(FundSubscription, \"WhY96r8EQc3Oz9bwxAiDv/Np3rE=\");\n_c = FundSubscription;\nexport default FundSubscription;\nvar _c;\n$RefreshReg$(_c, \"FundSubscription\");","map":{"version":3,"names":["React","useEffect","useState","subscribeToFund","sendNotification","fetchUserByDocument","fetchFunds","jsxDEV","_jsxDEV","FundSubscription","_s","formData","setFormData","document","fundId","amount","notifyBy","userId","setUserId","funds","setFunds","loadFunds","fundsList","error","console","alert","handleChange","e","target","name","value","handleFetchUser","user","id","handleSubmit","preventDefault","subscriptionData","transactionType","active","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","onClick","map","fund","_c","$RefreshReg$"],"sources":["F:/Proyectos/frontendbtg/src/components/FundSubscription/FundSubscription.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { subscribeToFund, sendNotification, fetchUserByDocument, fetchFunds } from '../../services/api';\r\nimport './FundSubscription.styles.css';\r\n\r\nconst FundSubscription: React.FC = () => {\r\n  const [formData, setFormData] = useState({ document: '', fundId: '', amount: 0, notifyBy: 'email' });\r\n  const [userId, setUserId] = useState<string | null>(null); // Estado para almacenar el ID del usuario\r\n  const [funds, setFunds] = useState<{ id: string; name: string }[]>([]); // Estado para almacenar los fondos\r\n\r\n  useEffect(() => {\r\n    const loadFunds = async () => {\r\n      try {\r\n        const fundsList = await fetchFunds(); // Llamada al servicio para obtener los fondos\r\n        setFunds(fundsList);\r\n      } catch (error) {\r\n        console.error('Error fetching funds', error);\r\n        alert('Could not fetch funds. Please try again later.');\r\n      }\r\n    };\r\n\r\n    loadFunds();\r\n  }, []);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleFetchUser = async () => {\r\n    if (formData.document) {\r\n      try {\r\n        const user = await fetchUserByDocument(formData.document);\r\n        setUserId(user.id);\r\n        alert('User found!'); // Notificación de éxito\r\n      } catch (error) {\r\n        console.error('Error fetching user', error);\r\n        alert('User not found. Please check the document.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (!userId) {\r\n      alert('Please validate the user document first.');\r\n      return;\r\n    }\r\n    try {\r\n      const subscriptionData = {\r\n        userId,\r\n        fundId: formData.fundId,\r\n        transactionType: 'subscribe',\r\n        amount: formData.amount,\r\n        active: true,\r\n      };\r\n\r\n      await subscribeToFund(subscriptionData);\r\n      await sendNotification('You have subscribed to the fund.', formData.notifyBy);\r\n      alert('Subscription successful!');\r\n    } catch (error) {\r\n      console.error('Error subscribing to fund', error);\r\n      alert('Subscription failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"fund-subscription-form\">\r\n      <h2>Subscribe to a Fund</h2>\r\n\r\n      {/* Campo para el documento */}\r\n      <input\r\n        type=\"text\"\r\n        name=\"document\"\r\n        placeholder=\"Document\"\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <button type=\"button\" onClick={handleFetchUser} className=\"fetch-user-button\">\r\n        Validate Document\r\n      </button>\r\n\r\n      {/* Selección de fondos desde la lista desplegable */}\r\n      <select name=\"fundId\" onChange={handleChange} required>\r\n        <option value=\"\">Select a Fund</option>\r\n        {funds.map(fund => (\r\n          <option key={fund.id} value={fund.id}>\r\n            {fund.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      \r\n      {/* Campo para el monto */}\r\n      <input\r\n        type=\"number\"\r\n        name=\"amount\"\r\n        placeholder=\"Amount\"\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      {/* Método de notificación */}\r\n      <select name=\"notifyBy\" onChange={handleChange}>\r\n        <option value=\"email\">Email</option>\r\n        <option value=\"sms\">SMS</option>\r\n      </select>\r\n\r\n      <button type=\"submit\">Subscribe</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FundSubscription;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}